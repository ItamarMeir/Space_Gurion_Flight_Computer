import time
import serial  # Import PySerial for serial communication

import adafruit_gps

# Create a serial connection for the GPS connection using default speed and
# a slightly higher timeout (GPS modules typically update once a second).
uart = serial.Serial("/dev/ttyS0", baudrate=9600, timeout=10)  # Use PySerial for serial communication

# Create a GPS module instance.
gps = adafruit_gps.GPS(uart)  # Use UART/pyserial

# Initialize the GPS module by changing what data it sends and at what rate.
gps.send_command(b"PMTK314,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0")  # Turn on GGA and RMC info
gps.send_command(b"PMTK220,1000")  # Set update rate to once a second

# Main loop runs forever printing data as it comes in
timestamp = time.monotonic()
while True:
    data = gps.read(32)  # read up to 32 bytes
    if data is not None:
        # convert bytearray to string
        data_string = "".join([chr(b) for b in data])
        print("Received:", data_string)

        # Check if a new GPS fix is available
        if gps.has_fix:
            print("Latitude: {0:.6f} degrees".format(gps.latitude))
            print("Longitude: {0:.6f} degrees".format(gps.longitude))
        else:
            print("Waiting for fix...")

    if time.monotonic() - timestamp > 5:
        # every 5 seconds...
        print("Requesting firmware version...")
        gps.send_command(b"PMTK605")  # request firmware version
        timestamp = time.monotonic()
